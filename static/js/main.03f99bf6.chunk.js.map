{"version":3,"sources":["helpers/api.ts","store/products.ts","store/cityFilter.ts","store/activityFilter.ts","store/error.ts","store/loading.ts","store/cityList.ts","store/activityList.ts","store/index.ts","pages/HomePage.tsx","components/LazyImage.tsx","components/ProductCard.tsx","components/ProductsList.tsx","components/GoBackButton.tsx","components/Spinner.tsx","components/Breadcrumb.tsx","components/Breadcrumbs.tsx","pages/ProductsPage.tsx","pages/ProductDetailsPage.tsx","pages/NotFoundPage.tsx","components/BackToTop.tsx","App.tsx","index.tsx"],"names":["fetchProducts","a","fetch","response","json","setProducts","products","type","reducer","action","setFilterByCity","field","filter","setFilterByActivity","setError","errorMessage","loading","cities","activities","rootReducer","combineReducers","productsReducer","filterByCity","cityFilterReducer","filterByActivity","activityFilterReducer","errorReducer","isLoading","loadingReducer","cityList","cityReducer","activityList","activityReducer","getProducts","state","getErrorMessage","getIsLoading","getActualCity","getActualActivity","getFiltredProducts","createSelector","city","activity","product","some","item","title","getFiltredCities","sort","b","localeCompare","filtredCities","forEach","Object","keys","getFiltredActivities","filtredActivities","store","createStore","composeWithDevTools","applyMiddleware","thunk","HomePage","className","to","pathname","LazyImage","src","alt","useState","showImage","setShowImage","imageRef","useRef","useEffect","ref","IntersectionObserver","entries","observer","entry","isIntersecting","disconnect","observe","registerObserver","current","ProductCard","logo","title_short","test","href","ProductsList","dispatch","useDispatch","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","get","visibleProducts","useSelector","showCityFilter","setShowCityFilter","showActivityFilter","setShowActivityFilter","filterHandler","value","set","delete","push","toString","classNames","onClick","map","key","length","e","preventDefault","window","scrollTo","handleClickToDetails","GoBackButton","goBack","Spinner","Breadcrumb","label","link","isLast","activeClassName","Breadcrumbs","preparedLabels","useMemo","split","slice","preparedBreadcrumbs","reduce","accum","crumb","index","ProductsPage","ProductDetailsPage","productId","useParams","setProduct","currentProduct","find","target","NotFoundPage","BackToTop","backToTop","useCallback","top","behavior","aria-label","App","api","message","from","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.03f99bf6.chunk.js","sourcesContent":["const API_URL = 'https://instasport.co/dashboard/api/v1/clubs/';\n\nexport const fetchProducts = async (): Promise<Product[]> => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n};\n","import { Action } from 'redux';\n\n\nconst SET_PRODUCTS = 'SET_PRODUCTS';\n\ntype SetProductsAction = Action<typeof SET_PRODUCTS> & {\n  products: Product[];\n};\n\nexport const setProducts = (products: Product[]) => ({ type: SET_PRODUCTS, products });\n\ntype PossibleActions = SetProductsAction;\n\nconst reducer = (products: Product[] = [], action: PossibleActions) => {\n  switch (action.type) {\n    case SET_PRODUCTS:\n      return action.products;\n\n    default:\n      return products;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst FILTER_BY_CITY = 'FILTER_BY_CITY';\n\ntype FilterByAction = Action<typeof FILTER_BY_CITY> & {\n  field: string;\n};\n\nexport const setFilterByCity = (field: string) => ({ type: FILTER_BY_CITY, field });\n\ntype PossibleActions = FilterByAction;\n\nconst reducer = (filter = '', action: PossibleActions) => {\n  switch (action.type) {\n    case FILTER_BY_CITY:\n      return action.field;\n\n    default:\n      return filter;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst FILTER_BY_ACTIVITY = 'FILTER_BY_ACTIVITY';\n\ntype FilterByAction = Action<typeof FILTER_BY_ACTIVITY> & {\n  field: string;\n};\n\nexport const setFilterByActivity = (field: string) => ({ type: FILTER_BY_ACTIVITY, field });\n\ntype PossibleActions = FilterByAction;\n\nconst reducer = (filter = '', action: PossibleActions) => {\n  switch (action.type) {\n    case FILTER_BY_ACTIVITY:\n      return action.field;\n\n    default:\n      return filter;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\n\nconst SET_ERROR = 'SET_ERROR';\n\ntype SetErrorAction = Action<typeof SET_ERROR> & {\n  errorMessage: string;\n};\n\nexport const setError = (errorMessage: string) => ({ type: SET_ERROR, errorMessage });\n\ntype PossibleActions = SetErrorAction;\n\nconst reducer = (errorMessage = '', action: PossibleActions) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.errorMessage;\n\n    default:\n      return errorMessage;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst FINISH_LOADING = 'FINISH_LOADING';\n\ntype SetLoading = Action<typeof START_LOADING | typeof FINISH_LOADING> & {\n  loading: boolean;\n};\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const finishLoading = () => ({ type: FINISH_LOADING });\n\ntype PossibleActions = SetLoading;\n\nconst reducer = (loading = false, action: PossibleActions) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n\n    case FINISH_LOADING:\n      return false;\n\n    default: return loading;\n  }\n}\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst SET_CITY_LIST = 'SET_CITY_LIST';\n\ntype SetSityList = Action<typeof SET_CITY_LIST> & {\n  cities: FilterListArr;\n};\n\nexport const setCityList = (cities: FilterListArr) => ({ type: SET_CITY_LIST, cities });\n\ntype PossibleActions = SetSityList;\n\nconst reducer = (cities = [] as FilterListArr, action: PossibleActions): FilterListArr => {\n  switch (action.type) {\n    case SET_CITY_LIST:\n      return action.cities;\n\n    default:\n      return cities;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst SET_ACTIVITY_LIST = 'SET_ACTIVITY_LIST';\n\ntype SetActivityList = Action<typeof SET_ACTIVITY_LIST> & {\n  activities: FilterListArr;\n};\n\nexport const setActivityList = (activities: FilterListArr) => ({ type: SET_ACTIVITY_LIST, activities });\n\ntype PossibleActions = SetActivityList;\n\nconst reducer = (activities = [] as FilterListArr, action: PossibleActions): FilterListArr => {\n  switch (action.type) {\n    case SET_ACTIVITY_LIST:\n      return [...action.activities];\n\n    default:\n      return activities;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Dispatch } from 'react';\nimport { createSelector } from 'reselect';\n\nimport * as api from '../helpers/api';\nimport productsReducer, { setProducts } from './products';\nimport cityFilterReducer from './cityFilter';\nimport activityFilterReducer from './activityFilter';\nimport errorReducer, { setError } from './error';\nimport loadingReducer, { startLoading, finishLoading } from './loading';\nimport cityReducer, { setCityList } from './cityList';\nimport activityReducer, { setActivityList } from './activityList';\n\nconst rootReducer = combineReducers({\n  products: productsReducer,\n  filterByCity: cityFilterReducer,\n  filterByActivity: activityFilterReducer,\n  errorMessage: errorReducer,\n  isLoading: loadingReducer,\n  cityList: cityReducer,\n  activityList: activityReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const getProducts = (state: RootState) => state.products;\nexport const getErrorMessage = (state: RootState) => state.errorMessage;\nexport const getIsLoading = (state: RootState) => state.isLoading;\nexport const getCityList = (state: RootState) => state.cityList.sort((a, b) => a.localeCompare(b));\nexport const getActivityList = (state: RootState) => state.activityList.sort((a, b) => a.localeCompare(b));\nexport const getActualCity = (state: RootState) => state.filterByCity;\nexport const getActualActivity = (state: RootState) => state.filterByActivity;\n\nexport const getFiltredProducts = createSelector(\n  getProducts,\n  getActualCity,\n  getActualActivity,\n  (products: Product[], city: string, activity: string) => {\n    return products.filter(product => {\n      if (city === '' && activity === '') {\n        return true;\n      }\n\n      if (city === '') {\n        return product.activity.some(item => item.title === activity);\n      }\n\n      if (activity === '') {\n        return product.city.title === city;\n      }\n\n      return (product.city.title === city &&\n        product.activity.some(item => item.title === activity));\n    });\n  }\n)\n\nexport const getFiltredCities = createSelector(\n  getProducts,\n  getCityList,\n  getActualActivity,\n  (products: Product[], cities: string[], activity: string) => {\n    const filtredCities: FilterList = {};\n    if (activity === '') {\n      return cities;\n    }\n\n    products.forEach(product => {\n      const checkActivity = product.activity.some(item => item.title === activity);\n\n      if (checkActivity) {\n        filtredCities[product.city.title] = true;\n      }\n    });\n\n    return Object.keys(filtredCities);\n  }\n)\n\nexport const getFiltredActivities = createSelector(\n  getProducts,\n  getActivityList,\n  getActualCity,\n  (products: Product[], activities: string[], city: string) => {\n    const filtredActivities: FilterList = {};\n    if (city === '') {\n      return activities;\n    }\n\n    products.forEach(product => {\n      if (product.city.title === city) {\n        product.activity.forEach(item => filtredActivities[item.title] = true)\n      }\n    });\n\n    return Object.keys(filtredActivities);\n  }\n)\n\nexport const loadProducts = () => {\n  return async (dispatch: Dispatch<unknown>) => {\n    dispatch(setError(''));\n    dispatch(startLoading());\n\n    try {\n      const city: FilterList = {};\n      const activity: FilterList = {};\n      const products = await api.fetchProducts();\n\n      products.forEach(product => {\n        city[product.city.title] = true;\n\n        product.activity.forEach(item => activity[item.title] = true)\n      })\n\n      dispatch(setProducts(products));\n      dispatch(setCityList(Object.keys(city)));\n      dispatch(setActivityList(Object.keys(activity)));\n      dispatch(finishLoading());\n    } catch (e) {\n      dispatch(setError(e.message));\n      dispatch(finishLoading());\n    }\n  };\n};\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './HomePage.scss';\n\nconst HomePage = () => {\n  return (\n    <div className=\"home-page\">\n      <Link className=\"home-page__link\"\n        to={{\n          pathname: \"/clubs\",\n        }}\n      >\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      Подобрать клуб\n    </Link>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { useState, useRef, useEffect } from 'react';\n\ntype Props = {\n  src: string;\n  alt: string;\n}\n\nconst registerObserver = (ref:any, setShowImage:any) => {\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if(!entry.isIntersecting) {\n        return;\n      }\n      setShowImage(true);\n      observer.disconnect();\n    });\n  });\n  observer.observe(ref)\n}\n\nconst LazyImage: React.FC<Props> = ({ src, alt }) => {\n  const [showImage, setShowImage] = useState(false);\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    registerObserver(imageRef.current, setShowImage)\n  }, [])\n\n  if(showImage) {\n    return <img className=\"product__image\" src={src} alt={alt} />\n  }\n  \n  return <span ref={imageRef} className=\"product__image\" />\n}\n\nexport default LazyImage;\n","import React from 'react';\nimport LazyImage from './LazyImage';\n\ntype Props = {\n  product: Product;\n};\n\nconst ProductCard: React.FC<Props> = ({ product }) => {\n  let { title, logo, title_short } = product;\n  \n  if(!/jpg|png/i.test(logo)) {\n    logo = 'https://placekitten.com/200/300';\n  }\n\n  return (\n    <a href=\"#!\" className=\"product__link animate__animated animate__flipInY\">\n      <LazyImage src={logo} alt={title_short} />\n      <p className=\"product__title\">{title}</p>\n    </a>\n  );\n}\n\nexport default ProductCard;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport * as store from '../store';\n\nimport ProductCard from './ProductCard';\n\nimport { setFilterByCity } from '../store/cityFilter';\nimport { setFilterByActivity } from '../store/activityFilter';\n\nconst ProductsList = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const filterByCity = searchParams.get('filterByCity') || '';\n  const filterByActivity = searchParams.get('filterByActivity') || '';\n  const visibleProducts = useSelector(store.getFiltredProducts);\n  const cityList = useSelector(store.getFiltredCities);\n  const activityList = useSelector(store.getFiltredActivities);\n  const [showCityFilter, setShowCityFilter] = useState(false);\n  const [showActivityFilter, setShowActivityFilter] = useState(false);\n\n  useEffect(() => {\n    dispatch(setFilterByCity(filterByCity));\n    dispatch(setFilterByActivity(filterByActivity));\n  }, [dispatch, filterByCity, filterByActivity]);\n\n  const filterHandler = (value: string) => {\n    if (showCityFilter) {\n      setShowCityFilter(false);\n      dispatch(setFilterByCity(value));\n      searchParams.set('filterByCity', value);\n      value === '' && searchParams.delete('filterByCity');\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n\n    if (showActivityFilter) {\n      setShowActivityFilter(false);\n      dispatch(setFilterByActivity(value));\n      searchParams.set('filterByActivity', value);\n      value === '' && searchParams.delete('filterByActivity');\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n  };\n\n  const handleClickToDetails = (\n    e: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    title_short: string\n  ) => {\n    e.preventDefault()\n    history.push(`/clubs/${title_short}`)\n    window.scrollTo(0, 0)\n  }\n\n  return (\n    <div className=\"products\">\n      <div className=\"products__filters\">\n        <div className=\"products__filter\">\n          <div\n            className={classNames('products__dropdown', {\n              'products__dropdown--active': showCityFilter\n            })}\n            onClick={() => {\n              setShowCityFilter(!showCityFilter);\n              setShowActivityFilter(false)\n            }}\n          >\n            {filterByCity ? filterByCity : 'Город'}\n          </div>\n          <ul\n            className={classNames(\n              'products__dropdown-list', {\n              'products__dropdown-list--active': showCityFilter\n            })}\n          >\n            <li\n              className={classNames(\n                'products__dropdown-item', {\n                'products__dropdown-item--active': '' === filterByCity\n              })}\n              onClick={() => filterHandler('')}\n            >\n            </li>\n            {cityList.map(value => (\n              <li\n                className={classNames(\n                  'products__dropdown-item', {\n                  'products__dropdown-item--active': value === filterByCity\n                })}\n                onClick={() => filterHandler(value)}\n                key={value}\n              >\n                {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"products__filter\">\n          <div\n            className={classNames(\n              'products__dropdown', {\n              'products__dropdown--active': showActivityFilter\n            })}\n            onClick={() => {\n              setShowActivityFilter(!showActivityFilter);\n              setShowCityFilter(false);\n            }}\n          >\n            {filterByActivity ? filterByActivity : 'Активность'}\n          </div>\n          <ul\n            className={classNames(\n              'products__dropdown-list', {\n              'products__dropdown-list--active': showActivityFilter\n            })}\n          >\n            <li\n              className={classNames(\n                'products__dropdown-item', {\n                'products__dropdown-item--active': '' === filterByActivity\n              })}\n              onClick={() => filterHandler('')}\n            >\n            </li>\n            {activityList.map(value => (\n              <li\n                className={classNames(\n                  'products__dropdown-item', {\n                  'products__dropdown-item--active': value === filterByActivity\n                })}\n                onClick={() => filterHandler(value)}\n                key={value}\n              >\n                {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      {visibleProducts.length ?\n        <>\n          <ul className=\"products__list\">\n            {visibleProducts.map(product => (\n              <li\n                className=\"product__item\"\n                key={product.title}\n                onClick={(e) => handleClickToDetails(e, product.title_short)}\n              >\n                <ProductCard product={product} />\n              </li>\n            ))}\n          </ul>\n        </>\n        :\n        <div>\n          <span>К сожалению, в выбранном городе данная тренировка не найдена</span>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default ProductsList;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst GoBackButton = () => {\n  const history = useHistory();\n  const goBack = () => history.goBack();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"product-details__button-back button-back\"\n      onClick={goBack}\n    >\n      Back\n    </button>\n  );\n};\n\nexport default GoBackButton;\n","import React from 'react';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  label: string;\n  link: string;\n  isLast: boolean;\n}\n\nconst Breadcrumb: React.FC<Props> = ({ label, link, isLast }) => (\n  <li className=\"breadcrumbs__item\">\n    <span className=\"breadcrumbs__arrow\" />\n    {isLast\n      ? <span className=\"breadcrumbs__last\">{label}</span>\n      : (\n        <NavLink\n          to={link}\n          className=\"breadcrumbs__link\"\n          activeClassName=\"breadcrumbs__link--active\"\n        >\n          {label}\n        </NavLink>\n      )\n    }\n  </li>\n);\n\nexport default Breadcrumb;\n","import React, { useMemo } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport Breadcrumb from './Breadcrumb';\n\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  const preparedLabels = useMemo(() => (\n    location.pathname\n      .split('/')\n      .slice(1)\n  ), [location]);\n\n  const preparedBreadcrumbs = useMemo(() => (\n    preparedLabels\n      .reduce((accum: string[], item) => [...accum, `${accum}/${item}`], [])\n  ), [preparedLabels]);\n\n  return (\n    <ul className=\"breadcrumbs\">\n      <NavLink\n        to=\"/\"\n        className=\"breadcrumbs__item breadcrumbs__home\"\n        activeClassName=\"breadcrumb__link--active\"\n      />\n      {preparedBreadcrumbs.map((crumb, index) => (\n        <Breadcrumb\n          label={preparedLabels[index]}\n          link={crumb}\n          key={crumb}\n          isLast={index === preparedBreadcrumbs.length - 1}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport * as store from '../store';\n\nimport './ProductsPage.scss';\nimport ProductsList from '../components/ProductsList';\nimport GoBackButton from '../components/GoBackButton';\nimport Spinner from '../components/Spinner';\nimport Breadcrumbs from '../components/Breadcrumbs';\n\nconst ProductsPage = () => {\n  const loading = useSelector(store.getIsLoading);\n  const errorMessage = useSelector(store.getErrorMessage);\n\n  return (\n    <div className=\"container\">\n      {errorMessage ?\n        <p>{errorMessage}</p>\n        :\n        <>\n          {loading\n            ?\n            <Spinner />\n            :\n            <>\n              <Breadcrumbs />\n              <GoBackButton />\n              <h1 className=\"page__title\">Запись на тренировки онлайн</h1>\n              <ProductsList />\n            </>\n          }\n        </>\n      }\n    </div>\n  );\n};\n\nexport default ProductsPage;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport * as store from '../store';\n\nimport './ProductDetailsPage.scss';\nimport Breadcrumbs from '../components/Breadcrumbs';\n\nconst ProductDetailsPage = () => {\n  const { productId } = useParams();\n  const products = useSelector(store.getProducts);\n  const [product, setProduct] = useState<Product>();\n\n  useEffect(() => {\n    if (products.length) {\n      const currentProduct = products.find(product => (product.title_short === productId))\n      setProduct(currentProduct);\n    }\n  }, [products, productId]);\n\n  if (product && !/jpg|png/i.test(product.logo)) {\n    product.logo = 'https://placekitten.com/200/300';\n  }\n\n  return (\n    <>\n      {product &&\n        <div className=\"container\">\n          <Breadcrumbs />\n          <div className=\"product__details\">\n            <div className=\"product__info\">\n              <img className=\"product__logo\" src={product.logo} alt={product.title_short} />\n              <p className=\"product__title\">{product.title}</p>\n              <a href={product.link} className=\"product__outer-link\" target=\" _blank\">Перейти на сайт</a>\n            </div>\n            <div className=\"product__activity activity\">\n              <h2 className=\"activity__title\">Виды тренировок</h2>\n              <ul className=\"activity__list\">\n                {product.activity.map(item => (\n                  <li className=\"activity__item\" key={item.title}>\n                    <span className=\"activity__text\">{item.title}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        </div>\n      }\n    </>\n  );\n}\n\nexport default ProductDetailsPage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './NotFoundPage.scss';\n\nconst NotFoundPage = () => {\n  const history = useHistory();\n\n  return (\n    <div className=\"notfound\">\n      <div className=\"notfound__message\">\n        <h2 className=\"notfound__message-title\">\n          Oops!\n        </h2>\n        <p className=\"notfound__message-text\">\n          We can't seem to find the page you're looking for\n        </p>\n        <button\n          type=\"button\"\n          className=\"notfound__link\"\n          onClick={() => history.push('/')}\n        >\n          Back to Main Page\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;","import React, {useCallback} from 'react';\n\nconst BackToTop = () => {\n  const backToTop = useCallback(\n    () => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    }, []\n  );\n  \n  return (\n    <button\n      type=\"button\"\n      aria-label=\"Back to top\"\n      className=\"back-top-button\"\n      onClick={backToTop}\n    />\n  );\n}\n\nexport default BackToTop;\n","import React, { useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport './App.scss';\n\nimport * as store from './store';\n\nimport HomePage from './pages/HomePage';\nimport ProductsPage from './pages/ProductsPage';\nimport ProductDetailsPage from './pages/ProductDetailsPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport BackToTop from './components/BackToTop';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(store.loadProducts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <main className=\"main\">\n        <Switch>\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/:productType/:productId\">\n            <ProductDetailsPage />\n          </Route>\n          <Route path=\"/clubs\">\n            <ProductsPage />\n          </Route>\n          <Route component={NotFoundPage} />\n        </Switch>\n        <BackToTop />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}