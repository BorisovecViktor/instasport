{"version":3,"sources":["helpers/api.ts","store/products.ts","store/cityFilter.ts","store/activityFilter.ts","store/error.ts","store/loading.ts","store/index.ts","pages/HomePage.tsx","components/LazyImage.tsx","components/ProductCard.tsx","components/BackToTop.tsx","constants/index.ts","components/ProductsList.tsx","components/GoBackButton.tsx","components/Spinner.tsx","components/Breadcrumb.tsx","components/Breadcrumbs.tsx","pages/ProductsPage.tsx","pages/ProductDetailsPage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["fetchProducts","a","fetch","response","json","setProducts","products","type","reducer","action","setFilterByCity","field","filter","setFilterByActivity","setError","errorMessage","loading","rootReducer","combineReducers","productsReducer","filterByCity","cityFilterReducer","filterByActivity","activityFilterReducer","errorReducer","isLoading","loadingReducer","getProducts","state","getErrorMessage","getIsLoading","getVisibleProducts","product","city","title","activity","some","item","store","createStore","composeWithDevTools","applyMiddleware","thunk","HomePage","className","to","pathname","LazyImage","src","alt","useState","showImage","setShowImage","imageRef","useRef","useEffect","ref","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","disconnect","observe","registerObserver","current","ProductCard","logo","title_short","href","BackToTop","backToTop","useCallback","window","scrollTo","top","behavior","aria-label","onClick","CITY_FILTERS","ACTIVITY_FILTERS","ProductsList","dispatch","useDispatch","history","useHistory","location","useLocation","searchParams","URLSearchParams","search","get","visibleProducts","useSelector","showCityFilter","setShowCityFilter","showActivityFilter","setShowActivityFilter","filterHandler","value","set","delete","push","toString","classNames","map","key","length","e","preventDefault","GoBackButton","goBack","Spinner","Breadcrumb","label","link","isLast","activeClassName","Breadcrumbs","preparedLabels","useMemo","split","slice","preparedBreadcrumbs","reduce","accum","crumb","index","ProductsPage","ProductDetailsPage","productId","useParams","setProduct","currentProduct","find","target","NotFoundPage","App","api","message","from","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a6f759e.chunk.js","sourcesContent":["const API_URL = 'https://instasport.co/dashboard/api/v1/clubs/';\n\nexport const fetchProducts = async (): Promise<Product[]> => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n};\n","import { Action } from 'redux';\n\n\nconst SET_PRODUCTS = 'SET_PRODUCTS';\n\ntype SetProductsAction = Action<typeof SET_PRODUCTS> & {\n  products: Product[];\n};\n\nexport const setProducts = (products: Product[]) => ({ type: SET_PRODUCTS, products });\n\ntype PossibleActions = SetProductsAction;\n\nconst reducer = (products: Product[] = [], action: PossibleActions) => {\n  switch (action.type) {\n    case SET_PRODUCTS:\n      return action.products;\n\n    default:\n      return products;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst FILTER_BY_CITY = 'FILTER_BY_CITY';\n\ntype FilterByAction = Action<typeof FILTER_BY_CITY> & {\n  field: string;\n};\n\nexport const setFilterByCity = (field: string) => ({ type: FILTER_BY_CITY, field });\n\ntype PossibleActions = FilterByAction;\n\nconst reducer = (filter = '', action: PossibleActions) => {\n  switch (action.type) {\n    case FILTER_BY_CITY:\n      return action.field;\n\n    default:\n      return filter;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst FILTER_BY_ACTIVITY = 'FILTER_BY_ACTIVITY';\n\ntype FilterByAction = Action<typeof FILTER_BY_ACTIVITY> & {\n  field: string;\n};\n\nexport const setFilterByActivity = (field: string) => ({ type: FILTER_BY_ACTIVITY, field });\n\ntype PossibleActions = FilterByAction;\n\nconst reducer = (filter = '', action: PossibleActions) => {\n  switch (action.type) {\n    case FILTER_BY_ACTIVITY:\n      return action.field;\n\n    default:\n      return filter;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\n\nconst SET_ERROR = 'SET_ERROR';\n\ntype SetErrorAction = Action<typeof SET_ERROR> & {\n  errorMessage: string;\n};\n\nexport const setError = (errorMessage: string) => ({ type: SET_ERROR, errorMessage });\n\ntype PossibleActions = SetErrorAction;\n\nconst reducer = (errorMessage = '', action: PossibleActions) => {\n  switch (action.type) {\n    case SET_ERROR:\n      return action.errorMessage;\n\n    default:\n      return errorMessage;\n  }\n};\n\nexport default reducer;\n","import { Action } from 'redux';\n\nconst START_LOADING = 'START_LOADING';\nconst FINISH_LOADING = 'FINISH_LOADING';\n\ntype SetLoading = Action<typeof START_LOADING | typeof FINISH_LOADING> & {\n  loading: boolean;\n};\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const finishLoading = () => ({ type: FINISH_LOADING });\n\ntype PossibleActions = SetLoading;\n\nconst reducer = (loading = false, action: PossibleActions) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n\n    case FINISH_LOADING:\n      return false;\n\n    default: return loading;\n  }\n}\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { Dispatch } from 'react';\n\nimport * as api from '../helpers/api';\nimport productsReducer, { setProducts } from './products';\nimport cityFilterReducer from './cityFilter';\nimport activityFilterReducer from './activityFilter';\nimport errorReducer, { setError } from './error';\nimport loadingReducer, { startLoading, finishLoading } from './loading';\n\nconst rootReducer = combineReducers({\n  products: productsReducer,\n  filterByCity: cityFilterReducer,\n  filterByActivity: activityFilterReducer,\n  errorMessage: errorReducer,\n  isLoading: loadingReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const getProducts = (state: RootState) => state.products;\nexport const getErrorMessage = (state: RootState) => state.errorMessage;\nexport const getIsLoading = (state: RootState) => state.isLoading;\n\nexport const loadProducts = () => {\n  return async (dispatch: Dispatch<unknown>) => {\n    dispatch(setError(''));\n    dispatch(startLoading());\n\n    try {\n      const products = await api.fetchProducts();\n\n      dispatch(setProducts(products));\n      dispatch(finishLoading());\n    } catch (e) {\n      dispatch(setError(e.message));\n      dispatch(finishLoading());\n    }\n  };\n};\n\nexport const getVisibleProducts = (state: RootState) => {\n  const visibleProducts: Product[] = state.products\n    .filter((product: Product) => (\n      product.city.title === state.filterByCity ||\n      state.filterByCity === ''\n    ))\n    .filter((product: Product) => (\n      product.activity.some(item => item.title === state.filterByActivity) ||\n      state.filterByActivity === ''\n    ))\n\n  return visibleProducts;\n}\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './HomePage.scss';\n\nconst HomePage = () => {\n  return (\n    <div className=\"home-page\">\n      <Link className=\"home-page__link\"\n        to={{\n          pathname: \"/clubs\",\n        }}\n      >\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      Подобрать клуб\n    </Link>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React, { useState, useRef, useEffect } from 'react';\n\ntype Props = {\n  src: string;\n  alt: string;\n}\n\nconst registerObserver = (ref:any, setShowImage:any) => {\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if(!entry.isIntersecting) {\n        return;\n      }\n      setShowImage(true);\n      observer.disconnect();\n    });\n  });\n  observer.observe(ref)\n}\n\nconst LazyImage: React.FC<Props> = ({ src, alt }) => {\n  const [showImage, setShowImage] = useState(false);\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    registerObserver(imageRef.current, setShowImage)\n  }, [])\n\n  if(showImage) {\n    return <img className=\"product__image\" src={src} alt={alt} />\n  }\n  \n  return <span ref={imageRef} className=\"product__image\" />\n}\n\nexport default LazyImage;\n","import React from 'react';\nimport LazyImage from './LazyImage';\n\ntype Props = {\n  product: Product;\n};\n\nconst ProductCard: React.FC<Props> = ({ product }) => {\n  const { title, logo, title_short } = product;\n\n  return (\n    <a href=\"#!\" className=\"product__link\">\n      <LazyImage src={logo} alt={title_short} />\n      <p className=\"product__title\">{title}</p>\n    </a>\n  );\n}\n\nexport default ProductCard;\n","import React, {useCallback} from 'react';\n\nconst BackToTop = () => {\n  const backToTop = useCallback(\n    () => {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      });\n    }, []\n  );\n  \n  return (\n    <button\n      type=\"button\"\n      aria-label=\"Back to top\"\n      className=\"back-top-button\"\n      onClick={backToTop}\n    />\n  );\n}\n\nexport default BackToTop;\n","export const CITY_FILTERS = [\n  '',\n  'Киев',\n  'Днепр',\n  'Белогородка',\n  'Бровары',\n  'Житомир',\n  'Ужгород',\n  'Вышгород',\n  'Полтава',\n  'Запорожье',\n  'Черкассы',\n  'Львов',\n  'Ирпень',\n  'Одесса',\n  'Буча',\n  'Харьков',\n  'Кропивницкий',\n]\n\nexport const ACTIVITY_FILTERS = [\n  '',\n  'Кардио',\n  'Круговая',\n  'Кроссфит',\n  'Жиросжигающая',\n  'Фитнес',\n  'Функциональная',\n  'Силовая',\n  'Стретчинг',\n  'TRX',\n  'Гимнастика',\n  'Полденс',\n  'Воздушное кольцо',\n  'Воздушные полотна',\n  'Акробатика',\n  'Йога',\n  'Сайклинг',\n  'Танцы',\n  'Exotic',\n  'GOFLO',\n  'HIIT',\n  'Аутдор',\n  'Бег',\n  'Степ',\n  'Плавание',\n  'Батут',\n  'Тверк',\n  'Пилатес',\n  'Зумба',\n  'Бокс',\n  'Борьба',\n  'Восстановительная',\n  'Интервальная',\n  'Шейпинг',\n  'Кангу джампс',\n  'Fight Fit',\n  'Ролики',\n  'Актерское мастерство',\n  'Карате',  \n]\n","import React, { useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport * as store from '../store';\n\nimport ProductCard from './ProductCard';\nimport BackToTop from './BackToTop';\n\nimport { CITY_FILTERS, ACTIVITY_FILTERS } from '../constants';\nimport { setFilterByCity } from '../store/cityFilter';\nimport { setFilterByActivity } from '../store/activityFilter';\n\nconst ProductsList = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const filterByCity = searchParams.get('filterByCity') || '';\n  const filterByActivity = searchParams.get('filterByActivity') || '';\n  const visibleProducts = useSelector(store.getVisibleProducts);\n  const [showCityFilter, setShowCityFilter] = useState(false);\n  const [showActivityFilter, setShowActivityFilter] = useState(false);\n\n  useEffect(() => {\n    dispatch(setFilterByCity(filterByCity));\n    dispatch(setFilterByActivity(filterByActivity));\n  }, [dispatch, filterByCity, filterByActivity]);\n\n  const filterHandler = (value: string) => {\n    if (showCityFilter) {\n      setShowCityFilter(false);\n      dispatch(setFilterByCity(value));\n      searchParams.set('filterByCity', value);\n      value === '' && searchParams.delete('filterByCity');\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n\n    if (showActivityFilter) {\n      setShowActivityFilter(false);\n      dispatch(setFilterByActivity(value));\n      searchParams.set('filterByActivity', value);\n      value === '' && searchParams.delete('filterByActivity');\n      history.push({\n        search: searchParams.toString(),\n      });\n    }\n  }; \n\n  return (\n    <div className=\"products\">\n      <div className=\"products__filters\">\n        <div className=\"products__filter\">\n          <div\n            className={classNames('products__dropdown', {\n              'products__dropdown--active': showCityFilter\n            })}\n            onClick={() => {\n              setShowCityFilter(!showCityFilter);\n              setShowActivityFilter(false)\n            }}\n          >\n            {filterByCity ? filterByCity : 'Город'}\n          </div>\n          <ul\n            className={classNames(\n              'products__dropdown-list', {\n              'products__dropdown-list--active': showCityFilter\n            })}\n          >\n            {CITY_FILTERS.map(value => (\n              <li\n                className={classNames(\n                  'products__dropdown-item', {\n                  'products__dropdown-item--active': value === filterByCity\n                })}\n                onClick={() => filterHandler(value)}\n                key={value}\n              >\n                {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"products__filter\">\n          <div\n            className={classNames(\n              'products__dropdown', {\n              'products__dropdown--active': showActivityFilter\n            })}\n            onClick={() => {\n              setShowActivityFilter(!showActivityFilter);\n              setShowCityFilter(false);\n            }}\n          >\n            {filterByActivity ? filterByActivity : 'Активность'}\n          </div>\n          <ul\n            className={classNames(\n              'products__dropdown-list', {\n              'products__dropdown-list--active': showActivityFilter\n            })}\n          >\n            {ACTIVITY_FILTERS.map(value => (\n              <li\n                className={classNames(\n                  'products__dropdown-item', {\n                  'products__dropdown-item--active': value === filterByActivity\n                })}\n                onClick={() => filterHandler(value)}\n                key={value}\n              >\n                {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n\n      {visibleProducts.length ?\n        <>\n          <ul className=\"products__list\">\n            {visibleProducts.map(product => (\n              <li\n                className=\"product__item\"\n                key={product.title}\n                onClick={(e) => {\n                  e.preventDefault()\n                  history.push(`/clubs/${product.title_short}`)\n                  window.scrollTo(0, 0)\n                }}\n              >\n                <ProductCard product={product} />\n              </li>\n            ))}\n          </ul>\n          <BackToTop />\n        </>\n        :\n        <div>\n          <span>К сожалению, в выбранном городе данная тренировка не найдена</span>\n        </div>\n      }\n    </div>\n  );\n};\n\nexport default ProductsList;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst GoBackButton = () => {\n  const history = useHistory();\n  const goBack = () => history.goBack();\n\n  return (\n    <button\n      type=\"button\"\n      className=\"product-details__button-back button-back\"\n      onClick={goBack}\n    >\n      Back\n    </button>\n  );\n};\n\nexport default GoBackButton;\n","import React from 'react';\n\nconst Spinner = () => {\n  return (\n    <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  );\n}\n\nexport default Spinner;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  label: string;\n  link: string;\n  isLast: boolean;\n}\n\nconst Breadcrumb: React.FC<Props> = ({ label, link, isLast }) => (\n  <li className=\"breadcrumbs__item\">\n    <span className=\"breadcrumbs__arrow\" />\n    {isLast\n      ? <span className=\"breadcrumbs__last\">{label}</span>\n      : (\n        <NavLink\n          to={link}\n          className=\"breadcrumbs__link\"\n          activeClassName=\"breadcrumbs__link--active\"\n        >\n          {label}\n        </NavLink>\n      )\n    }\n  </li>\n);\n\nexport default Breadcrumb;\n","import React, { useMemo } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n\nimport Breadcrumb from './Breadcrumb';\n\nconst Breadcrumbs = () => {\n  const location = useLocation();\n  const preparedLabels = useMemo(() => (\n    location.pathname\n      .split('/')\n      .slice(1)\n  ), [location]);\n\n  const preparedBreadcrumbs = useMemo(() => (\n    preparedLabels\n      .reduce((accum: string[], item) => [...accum, `${accum}/${item}`], [])\n  ), [preparedLabels]);\n\n  return (\n    <ul className=\"breadcrumbs\">\n      <NavLink\n        to=\"/\"\n        className=\"breadcrumbs__item breadcrumbs__home\"\n        activeClassName=\"breadcrumb__link--active\"\n      />\n      {preparedBreadcrumbs.map((crumb, index) => (\n        <Breadcrumb\n          label={preparedLabels[index]}\n          link={crumb}\n          key={crumb}\n          isLast={index === preparedBreadcrumbs.length - 1}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport * as store from '../store';\n\nimport './ProductsPage.scss';\nimport ProductsList from '../components/ProductsList';\nimport GoBackButton from '../components/GoBackButton';\nimport Spinner from '../components/Spinner';\nimport Breadcrumbs from '../components/Breadcrumbs';\n\nconst ProductsPage = () => {\n  const loading = useSelector(store.getIsLoading);\n  const errorMessage = useSelector(store.getErrorMessage);\n\n  return (\n    <div className=\"container\">\n      {errorMessage ?\n        <p>{errorMessage}</p>\n        :\n        <>\n          {loading\n            ?\n            <Spinner />\n            :\n            <>\n              <Breadcrumbs />\n              <GoBackButton />\n              <h1 className=\"page__title\">Запись на тренировки онлайн</h1>\n              <ProductsList />\n            </>\n          }\n        </>\n      }\n    </div>\n  );\n};\n\nexport default ProductsPage;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport * as store from '../store';\n\nimport './ProductDetailsPage.scss';\nimport Breadcrumbs from '../components/Breadcrumbs';\n\nconst ProductDetailsPage = () => {\n  const { productId } = useParams();\n  const products = useSelector(store.getProducts);\n  const [product, setProduct] = useState<Product>();\n\n  useEffect(() => {\n    if (products.length) {\n      const currentProduct = products.find(product => (product.title_short === productId))\n      setProduct(currentProduct);\n    }\n  }, [products, productId]);\n\n  return (\n    <div className=\"container\">\n      <Breadcrumbs />\n      <div className=\"product__details\">\n        <div className=\"product__info\">\n          <img className=\"product__image\" src={product?.logo} alt={product?.title_short} />\n          <p className=\"product__title\">{product?.title}</p>\n          <a href={product?.link} className=\"product__outer-link\" target=\" _blank\">Перейти на сайт</a>\n        </div>\n        <div className=\"product__activity activity\">\n          <h2 className=\"activity__title\">Виды тренировок</h2>\n          <ul className=\"activity__list\">\n            {product?.activity.map(item => (\n              <li className=\"activity__item\" key={item.title}>\n                <span className=\"activity__text\">{item.title}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProductDetailsPage;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport './NotFoundPage.scss';\n\nconst NotFoundPage = () => {\n  const history = useHistory();\n\n  return (\n    <div className=\"notfound\">\n      <div className=\"notfound__message\">\n        <h2 className=\"notfound__message-title\">\n          Oops!\n        </h2>\n        <p className=\"notfound__message-text\">\n          We can't seem to find the page you're looking for\n        </p>\n        <button\n          type=\"button\"\n          className=\"notfound__link\"\n          onClick={() => history.push('/')}\n        >\n          Back to Main Page\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFoundPage;","import React, { useEffect } from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport './App.scss';\n\nimport * as store from './store';\n\nimport HomePage from './pages/HomePage';\nimport ProductsPage from './pages/ProductsPage';\nimport ProductDetailsPage from './pages/ProductDetailsPage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(store.loadProducts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <main className=\"main\">\n        <Switch>\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/:productType/:productId\">\n            <ProductDetailsPage />\n          </Route>\n          <Route path=\"/clubs\">\n            <ProductsPage />\n          </Route>\n          <Route component={NotFoundPage} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}